"use strict";(self.webpackChunkmy_framework_docs=self.webpackChunkmy_framework_docs||[]).push([[4033],{409:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.2 - What Your Bot Can\'t See - API Limitations","title":"8.2 - What Your Bot Can\'t See - API Limitations","description":"8.2. The Fog of Ignorance: API Limitations","source":"@site/docs/Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.2 - What Your Bot Can\'t See - API Limitations.md","sourceDirName":"Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations","slug":"/Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.2 - What Your Bot Can\'t See - API Limitations","permalink":"/learn-python-sc2/docs/Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.2 - What Your Bot Can\'t See - API Limitations","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"8.1 - What Your Bot Sees That a Human Can\'t - API Advantages","permalink":"/learn-python-sc2/docs/Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.1 - What Your Bot Sees That a Human Can\'t - API Advantages"},"next":{"title":"8.3 - Optional - Using the Raw API","permalink":"/learn-python-sc2/docs/Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.3 - Optional - Using the Raw API"}}');var s=n(4848),o=n(8453);const r={},a=void 0,l={},c=[{value:"<strong>8.2. The Fog of Ignorance: API Limitations</strong>",id:"82-the-fog-of-ignorance-api-limitations",level:3},{value:"<strong>The Core Limitation: You See State, Not Intent</strong>",id:"the-core-limitation-you-see-state-not-intent",level:4},{value:"<strong>Key Categories of Missing Information</strong>",id:"key-categories-of-missing-information",level:4},{value:"<strong>A Developer&#39;s Checklist: Working Around Limitations</strong>",id:"a-developers-checklist-working-around-limitations",level:4}];function h(e){const t={code:"code",em:"em",h3:"h3",h4:"h4",hr:"hr",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h3,{id:"82-the-fog-of-ignorance-api-limitations",children:(0,s.jsx)(t.strong,{children:"8.2. The Fog of Ignorance: API Limitations"})}),"\n",(0,s.jsx)(t.p,{children:'The StarCraft II API is a window into the game, but it is not a perfect one. There are several key pieces of information that are intentionally hidden from your bot to create a more "human-like" challenge.'}),"\n",(0,s.jsxs)(t.p,{children:["Understanding what your bot ",(0,s.jsx)(t.strong,{children:"cannot"})," see is just as important as knowing what it can. It prevents you from trying to access data that doesn't exist and forces you to develop intelligent strategies\u2014like scouting and inference\u2014to work around these limitations. Your bot is a perfect observer of what's visible, but it is not omniscient."]}),"\n",(0,s.jsx)(t.h4,{id:"the-core-limitation-you-see-state-not-intent",children:(0,s.jsx)(t.strong,{children:"The Core Limitation: You See State, Not Intent"})}),"\n",(0,s.jsx)(t.p,{children:"The fundamental design of the API is that it tells you the current state of the game, but it hides the enemy's future plans and ongoing actions."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"+-----------------------------------+   You CAN see this...\r\n| Enemy has a Spire.                |   (The current state)\r\n+-----------------------------------+\r\n                 |\r\n                 v\r\n+-----------------------------------+   You CANNOT see this...\r\n| Spire is researching +1 Air Attack|   (An ongoing action/intent)\r\n+-----------------------------------+\r\n                 |\r\n                 v\r\n+-----------------------------------+   You CAN see this...\r\n| Enemy Mutalisk has +1 attack.     |   (The new state, once complete)\r\n+-----------------------------------+\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h4,{id:"key-categories-of-missing-information",children:(0,s.jsx)(t.strong,{children:"Key Categories of Missing Information"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Category"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Specific Information Your Bot CANNOT See"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"What This Means for Your Bot's Strategy"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"1. Enemy Actions"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["- ",(0,s.jsx)(t.strong,{children:"Production Queues:"})," What units are being built in an enemy Barracks or Gateway.",(0,s.jsx)("br",{}),"- ",(0,s.jsx)(t.strong,{children:"Worker Assignments:"})," Whether an enemy worker is mining minerals, gas, or building a proxy.",(0,s.jsx)("br",{}),"- ",(0,s.jsx)(t.strong,{children:"Research Progress:"})," The progress bar of an ongoing enemy upgrade."]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.strong,{children:"Scouting is mandatory."})," You must infer the enemy's army composition and tech choices by visually inspecting their structures and units. You cannot simply query their production."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"2. Unit-Specific States"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["- ",(0,s.jsx)(t.strong,{children:"Interceptor Count:"})," The number of Interceptors on an enemy Carrier.",(0,s.jsx)("br",{}),"- ",(0,s.jsx)(t.strong,{children:"Adept Shade Timers:"})," The remaining duration of an Adept's shade.",(0,s.jsx)("br",{}),"- ",(0,s.jsx)(t.strong,{children:"Lock-On Targets:"})," The target of an enemy Cyclone's Lock-On or a Widow Mine's attack."]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["You must treat these units as black boxes. For example, you have to assume any Carrier is a full threat, and you must react to the ",(0,s.jsx)(t.em,{children:"effect"})," of a Cyclone's lock-on, not the targeting itself."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"3. Global Abilities & Buffs"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["- ",(0,s.jsx)(t.strong,{children:"Enemy Chronoboost:"})," Whether an enemy Nexus is using Chronoboost or what it is targeting.",(0,s.jsx)("br",{}),"- ",(0,s.jsx)(t.strong,{children:"MULEs:"})," You can see a MULE, but you get no special notification of it being called down."]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"You must develop game sense. If an enemy's army appears faster than expected, you should infer that Chronoboost or MULEs may have been a factor, but you can't confirm it directly."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"4. Player-Specific Information"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["- ",(0,s.jsx)(t.strong,{children:"Player Camera:"})," Where your opponent is currently looking on the map.",(0,s.jsx)("br",{}),"- ",(0,s.jsx)(t.strong,{children:"Enemy Resources:"})," You cannot see the enemy's mineral or gas count directly."]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'This is the ultimate "fog of war." You must scout to estimate the enemy\'s economic strength and guess where their attention might be focused.'})]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h4,{id:"a-developers-checklist-working-around-limitations",children:(0,s.jsx)(t.strong,{children:"A Developer's Checklist: Working Around Limitations"})}),"\n",(0,s.jsx)(t.p,{children:"Since you cannot access this data directly, your bot must be programmed to act like a real player and infer information."}),"\n",(0,s.jsxs)(t.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ",(0,s.jsx)(t.strong,{children:"Scout Early, Scout Often:"})," Is the enemy expanding? Do they have a lot of production buildings? Are they building high-tech structures? Scouting is your only way to answer these questions."]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ",(0,s.jsx)(t.strong,{children:"Analyze Army Composition:"})," If you see a lot of Zealots, the enemy is likely not going for air units. If you see a Stargate, you must prepare for air threats."]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ",(0,s.jsx)(t.strong,{children:"Track Known Upgrades:"})," When you see an enemy unit with a visible upgrade (e.g., a Marine with Stimpack), you can record that this upgrade is complete for the rest of the game."]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ",(0,s.jsx)(t.strong,{children:"Develop Heuristics:"}),' Create "rules of thumb" for your bot. For example: "If it is past the 5-minute mark and I have not seen the enemy expand, assume they are preparing an all-in attack."']}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Your bot's intelligence is not measured by its ability to access hidden data, but by its ability to form a coherent and effective strategy in the face of incomplete information."})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);