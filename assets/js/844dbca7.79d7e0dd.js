"use strict";(self.webpackChunkmy_framework_docs=self.webpackChunkmy_framework_docs||[]).push([[2578],{4123:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.3 - Optional - Using the Raw API","title":"8.3 - Optional - Using the Raw API","description":"The python-sc2 library is an abstraction layer. It acts as a sophisticated translator, converting the complex, raw data stream from the StarCraft II engine into clean, easy-to-use Python objects like Unit and Units. For 99% of developers, this high-level interface is the best and most productive way to build a bot.","source":"@site/docs/Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.3 - Optional - Using the Raw API.md","sourceDirName":"Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations","slug":"/Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.3 - Optional - Using the Raw API","permalink":"/learn-python-sc2/docs/Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.3 - Optional - Using the Raw API","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"8.2 - What Your Bot Can\'t See - API Limitations","permalink":"/learn-python-sc2/docs/Part 4 - The Wider World/Chapter 8 - Bot Vision - Advantages and Limitations/8.2 - What Your Bot Can\'t See - API Limitations"},"next":{"title":"9.1 - Where to Get Help - Discord & GitHub","permalink":"/learn-python-sc2/docs/Part 4 - The Wider World/Chapter 9 - Community and Resources/9.1 - Where to Get Help - Discord & GitHub"}}');var s=n(4848),i=n(8453);const a={},o=void 0,l={},d=[{value:"<strong>The Data Flow: High-Level vs. Raw</strong>",id:"the-data-flow-high-level-vs-raw",level:4},{value:"<strong>Why and When to Use the Raw API</strong>",id:"why-and-when-to-use-the-raw-api",level:4},{value:"<strong>The Trade-Offs: What You Gain and What You Lose</strong>",id:"the-trade-offs-what-you-gain-and-what-you-lose",level:4},{value:"<strong>Code Example: A Raw Data Inspector</strong>",id:"code-example-a-raw-data-inspector",level:4}];function h(e){const t={code:"code",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"python-sc2"})," library is an abstraction layer. It acts as a sophisticated translator, converting the complex, raw data stream from the StarCraft II engine into clean, easy-to-use Python objects like ",(0,s.jsx)(t.code,{children:"Unit"})," and ",(0,s.jsx)(t.code,{children:"Units"}),". For 99% of developers, this high-level interface is the best and most productive way to build a bot."]}),"\n",(0,s.jsx)(t.p,{children:'However, for advanced users who require absolute control or need to access data not exposed by the high-level helpers, the library provides a direct "escape hatch" to the raw API data.'}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Warning:"})," This is an advanced topic. Using the raw API requires a deep understanding of the underlying game protocol and significantly increases code complexity."]}),"\n",(0,s.jsx)(t.h4,{id:"the-data-flow-high-level-vs-raw",children:(0,s.jsx)(t.strong,{children:"The Data Flow: High-Level vs. Raw"})}),"\n",(0,s.jsx)(t.p,{children:"This diagram illustrates the two paths data can take to your bot's logic."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"+--------------------+\r\n|   SC2 Game Engine  |\r\n+--------------------+\r\n          |\r\n          | (Sends complex Protobuf data)\r\n          v\r\n+--------------------+\r\n|  python-sc2 Library|\r\n+--------------------+\r\n          |\r\n          | (Translates and simplifies)\r\n          v\r\n.-----------------------------------------.  <-- The Standard Path (Recommended)\r\n| High-Level Helpers (self.units, etc.)   |      (Clean, easy-to-use Python objects)\r\n`-----------------------------------------`\r\n          |\r\n          | (Provides a direct passthrough)\r\n          v\r\n.-----------------------------------------.  <-- The Raw Path (Advanced)\r\n|   Raw API (self.observation_raw)        |      (Complex, nested Protobuf objects)\r\n`-----------------------------------------`\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h4,{id:"why-and-when-to-use-the-raw-api",children:(0,s.jsx)(t.strong,{children:"Why and When to Use the Raw API"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Scenario"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"1. Accessing Unexposed Data"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The most legitimate reason. There may be rare or newly added data fields in the game's protocol that ",(0,s.jsx)(t.code,{children:"python-sc2"})," does not yet parse into a high-level helper. The raw API is your only way to access these."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"2. Extreme Performance Optimization"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["For top-tier competitive bots, the process of creating Python ",(0,s.jsx)(t.code,{children:"Unit"})," objects on every step can introduce a tiny amount of overhead. An expert might bypass this by creating their own, more efficient data structures directly from the raw data. This is a significant undertaking."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"3. Library Debugging"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["If you suspect a bug in how ",(0,s.jsx)(t.code,{children:"python-sc2"}),' is interpreting the game state, you can compare the data from the high-level helpers against the "ground truth" provided by the raw API to diagnose the issue.']})]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h4,{id:"the-trade-offs-what-you-gain-and-what-you-lose",children:(0,s.jsx)(t.strong,{children:"The Trade-Offs: What You Gain and What You Lose"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Aspect"}),(0,s.jsxs)(t.th,{style:{textAlign:"left"},children:["High-Level API (",(0,s.jsx)(t.code,{children:"self.units"}),")"]}),(0,s.jsxs)(t.th,{style:{textAlign:"left"},children:["Raw API (",(0,s.jsx)(t.code,{children:"self.observation_raw.raw_data.units"}),")"]})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"Ease of Use"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.strong,{children:"Very High."})," Clean objects, intuitive property names."]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.strong,{children:"Very Low."})," Deeply nested, verbose Protobuf objects."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"Readability"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"if marine.is_idle:"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"if not raw_marine.orders:"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"Helper Methods"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.strong,{children:"Abundant."})," ",(0,s.jsx)(t.code,{children:".distance_to"}),", ",(0,s.jsx)(t.code,{children:".target_in_range"}),", etc."]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.strong,{children:"None."})," You must implement all calculations yourself."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"Performance"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Excellent for almost all use cases."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Potentially faster, but only if you build a highly optimized custom data layer to replace the library's."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"Control"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"High."}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.strong,{children:"Absolute."})," Direct access to every field the API provides."]})]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h4,{id:"code-example-a-raw-data-inspector",children:(0,s.jsx)(t.strong,{children:"Code Example: A Raw Data Inspector"})}),"\n",(0,s.jsx)(t.p,{children:"This example demonstrates how to access the raw Protobuf objects and contrasts them with their high-level equivalents. Note the verbosity and the different property names."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'# raw_api_inspector.py\r\n\r\nfrom sc2 import maps\r\nfrom sc2.bot_ai import BotAI\r\nfrom sc2.data import Difficulty, Race\r\nfrom sc2.main import run_game\r\nfrom sc2.player import Bot, Computer\r\n# Import the raw protocol buffer definitions.\r\nfrom s2clientprotocol import sc2api_pb2 as sc_pb\r\n\r\nclass RawAPIInspectorBot(BotAI):\r\n    """A bot that inspects and compares raw vs. high-level API data."""\r\n\r\n    async def on_step(self, iteration: int):\r\n        # We only want to run this once to avoid spamming the console.\r\n        if iteration == 5:\r\n            marine = None\r\n            print("--- High-Level API (Recommended) ---")\r\n            # Get the first unit using the clean, high-level interface.\r\n            # Safely get the first unit, if one exists.\r\n            if self.units:\r\n                marine = self.units.first\r\n                print(f"Unit: {marine.name}")\r\n                print(f"Health: {marine.health}/{marine.health_max}")\r\n                print(f"Position: {marine.position.rounded}")\r\n            else:\r\n                print("No units found with the high-level API.")\r\n\r\n\r\n            print("\\n--- Raw API (Advanced) ---")\r\n            # Get the raw observation object for the current step.\r\n            observation: sc_pb.Observation = self.observation_raw\r\n            # Access the list of raw unit Protobufs.\r\n            raw_units = observation.raw_data.units\r\n\r\n            # Find the raw unit with the same tag as our high-level marine.\r\n            # This check will only succeed if a unit was found above.\r\n            if marine:\r\n                raw_marine_proto = next((u for u in raw_units if u.tag == marine.tag), None)\r\n                if raw_marine_proto:\r\n                    # Note the different property names and data types.\r\n                    print(f"Unit Tag: {raw_marine_proto.tag}")\r\n                    print(f"Unit Type ID: {raw_marine_proto.unit_type}")\r\n                    print(f"Health: {raw_marine_proto.health}/{raw_marine_proto.health_max}")\r\n                    # Position is a nested object.\r\n                    print(f"Position: (x={raw_marine_proto.pos.x:.2f}, y={raw_marine_proto.pos.y:.2f})")\r\n                else:\r\n                    print(f"Could not find raw unit with tag {marine.tag}")\r\n            elif raw_units:\r\n                print(f"Total raw units found: {len(raw_units)}")\r\n            else:\r\n                print("No units found with the raw API.")\r\n\r\n\r\nif __name__ == "__main__":\r\n    run_game(\r\n        maps.get("AcropolisLE"),\r\n        [\r\n            Bot(Race.Terran, RawAPIInspectorBot()),\r\n            Computer(Race.Zerg, Difficulty.Easy)\r\n        ],\r\n        realtime=True,\r\n    )\n'})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Conclusion:"})," The raw API is a powerful tool for experts with specific, demanding requirements. For all other developers, the standard high-level interface provides the ideal balance of power, performance, and readability."]})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(6540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);